<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAkACQAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/4gIo
        SUNDX1BST0ZJTEUAAQEAAAIYAAAAAAQwAABtbnRyUkdCIFhZWiAAAAAAAAAAAAAAAABhY3NwAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAAAHRyWFlaAAABZAAAABRnWFlaAAABeAAA
        ABRiWFlaAAABjAAAABRyVFJDAAABoAAAAChnVFJDAAABoAAAAChiVFJDAAABoAAAACh3dHB0AAAByAAA
        ABRjcHJ0AAAB3AAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAAAFgAAAAcAHMAUgBHAEIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAA
        JKAAAA+EAAC2z3BhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAAE9AAAApbAAAAAAAAAABYWVogAAAAAAAA
        9tYAAQAAAADTLW1sdWMAAAAAAAAAAQAAAAxlblVTAAAAIAAAABwARwBvAG8AZwBsAGUAIABJAG4AYwAu
        ACAAMgAwADEANv/bAEMAAgEBAgEBAgICAgICAgIDBQMDAwMDBgQEAwUHBgcHBwYHBwgJCwkICAoIBwcK
        DQoKCwwMDAwHCQ4PDQwOCwwMDP/bAEMBAgICAwMDBgMDBgwIBwgMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIAIAAUAMBIgACEQEDEQH/xAAfAAABBQEBAQEB
        AQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEU
        MoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdo
        aWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX
        2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1
        EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXx
        FxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SV
        lpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/
        2gAMAwEAAhEDEQA/AP0Eooor/Lc/rAKKKKACikJJZVVWZmOAAOTVuTSJYVyxjXHXnp+VVGEmrpEynGOj
        KtFSrbCRsLLAx9A9Vbe9hu9/lSRyeW7RkqwOGVirD8GBB9xWfMhqSZLRRRVDCiiigAooqaytftc+1m8u
        NRvkb0Udf8KcVd2JlJJXYlpqNrosySXTN50ikxKBnaOmfx7fjWtpuq2t6d4kjfcfuNxn8K4nWZv7V1KS
        bbhWOFHoo4A/AVA0/wBliaRnWNIhuZ2O0KB1JJ6Y9a+djxbUpVHGnBOF9O78/n6GksujUhzN2k9/8ix8
        VQ2imKHTbjyb7VWdYgrqHtY1A8ycBg2Qm5QPlI3vGrYDZGbbX66PZ2trbKsbsUtbWONAFTjAAUY+VVBO
        B0VTWbpM1zq1zNql4skUl8FEUUqbZIIVB8tG/wBrLO5yAVMpQ52A1seCrBtQ1GTVm2mDyzBaAf3SQXf/
        AIEVAHsmR96spqOLxahSjyxT5pWf2v60082jqp03SoXqO76fodNRRRX0xxhRRRQAE4o1aVbXSVhX/W3R
        DufRB0H58/lUltB9quFj3bdx5PoO9ZOvakrtcXTYVVBKj+6o6D8q8XPcY6OH9nH4p6fLr/l8wpx56ij/
        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
</value>
  </data>
</root>